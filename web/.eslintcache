[{"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\index.js":"1","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\App.js":"2","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\LandingPage\\index.jsx":"3","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\Topic\\index.jsx":"4","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\SpecificTopic\\index.jsx":"5","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\Courses\\index.jsx":"6","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\NavBar\\index.jsx":"7","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\CourseDiv\\index.jsx":"8","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\services\\api.js":"9","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\TopicDiv\\index.jsx":"10","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\utils\\fullCourse.js":"11","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\ReportButton\\index.jsx":"12","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\ChatBot\\index.jsx":"13"},{"size":205,"mtime":1610665973356,"results":"14","hashOfConfig":"15"},{"size":745,"mtime":1610817069786,"results":"16","hashOfConfig":"15"},{"size":1456,"mtime":1610817077208,"results":"17","hashOfConfig":"15"},{"size":5089,"mtime":1610734022496,"results":"18","hashOfConfig":"15"},{"size":1669,"mtime":1610675077468,"results":"19","hashOfConfig":"15"},{"size":2774,"mtime":1610813599106,"results":"20","hashOfConfig":"15"},{"size":606,"mtime":1610665973351,"results":"21","hashOfConfig":"15"},{"size":1099,"mtime":1610813472905,"results":"22","hashOfConfig":"15"},{"size":122,"mtime":1610665973364,"results":"23","hashOfConfig":"15"},{"size":645,"mtime":1610665973355,"results":"24","hashOfConfig":"15"},{"size":935,"mtime":1610665973365,"results":"25","hashOfConfig":"15"},{"size":270,"mtime":1610665973352,"results":"26","hashOfConfig":"15"},{"size":7324,"mtime":1611009159328,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"u2brvz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\index.js",[],["59","60"],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\App.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\LandingPage\\index.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\Topic\\index.jsx",["61"],"import {useState, useEffect} from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport api from '../../services/api';\r\nimport fullCourse from '../../utils/fullCourse';\r\n\r\nimport './styles.css';\r\n\r\nimport flagWhiteIcon from '../../assets/icons/flag-white.svg';\r\nimport emptyIcon from '../../assets/icons/empty.svg';\r\n\r\nimport NavBar from '../../components/NavBar';\r\nimport TopicDiv from '../../components/TopicDiv';\r\nimport ReportButton from '../../components/ReportButton';\r\n\r\nfunction Topic() {\r\n    const [name, setName] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [type, setType] = useState(null);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const [whichPopup, setWhichPopup] = useState(null);\r\n    const [topics, setTopics] = useState([]);\r\n    const [courseName, setCourseName] = useState([]);\r\n\r\n    const {course} = useParams();\r\n\r\n    function sendReport(topic_id){\r\n        if(type === null) {\r\n            alert('Escolha um tipo');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            name,\r\n            title,\r\n            type,\r\n            text, \r\n            topic_id\r\n        }\r\n\r\n        api.post('/report', data).then((response) => {\r\n            if(response.status === 201) {\r\n                alert('Denúncia feita com sucesso!');\r\n                setWhichPopup(null);\r\n            }\r\n          }, (error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    useEffect(() => {\r\n        api.get(`/topics?subject=${course}`).then(res => {\r\n            setTopics(res.data);\r\n        })\r\n\r\n        setCourseName(fullCourse(course));\r\n    },  []);\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <p className=\"title\">{courseName}</p>\r\n            {topics.length === 0 ? (\r\n                        <div className=\"topics-empty\">\r\n                            <img src={emptyIcon} alt=\"Vazio\"/>\r\n                            <span>Ops! Parece que essa matéria ainda não possui conteúdo.</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"topics-container\">\r\n                            {topics.map((topic) => {\r\n                                return (\r\n                                    <TopicDiv\r\n                                        key={topic.id}\r\n                                        title={topic.title}\r\n                                        subject={topic.subject}\r\n                                        author={topic.author}\r\n                                        id={topic.id}\r\n                                        children={<ReportButton func={setWhichPopup} id={topic.id}/>}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                }\r\n            \r\n\r\n            {whichPopup !== null ? (\r\n                <div className=\"report-popup\">\r\n                    <div className=\"report-title\">\r\n                        <img src={flagWhiteIcon} alt=\"Reportar\"/>\r\n                        <h2>Reportar</h2>\r\n                    </div>\r\n\r\n                    <div className=\"input-box\">\r\n                        <label htmlFor=\"name\">Nome:</label>\r\n                        <input type=\"text\" id=\"name\" onChange={(e) => setName(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-box\">\r\n                        <label htmlFor=\"title\">Título:</label>\r\n                        <input type=\"text\" id=\"title\" onChange={(e) => setTitle(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"radio-box\">\r\n                        <p>Tipo:</p>\r\n                        <div className=\"radios\">\r\n                            <div>\r\n                                <label className=\"radio-label\" htmlFor=\"report\">Denúncia:</label>\r\n                                <input type=\"radio\" id=\"report\" name=\"type\" onClick={() => setType(\"Denúncia\")}/>\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"radio-label\" htmlFor=\"error\">Erro:</label>\r\n                                <input type=\"radio\" id=\"error\" name=\"type\" onClick={() => setType(\"Erro\")}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-box\">\r\n                        <label htmlFor=\"textarea\">Descrição:</label>\r\n                        <textarea id=\"textarea\" onChange={(e) => setText(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"report-btns\">\r\n                        <button onClick={() => setWhichPopup(null)}>\r\n                            Cancelar\r\n                        </button>\r\n\r\n                        <button onClick={() => sendReport(whichPopup)}>\r\n                            Confirmar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : \"\"}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Topic;","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\SpecificTopic\\index.jsx",["62"],"import {useState, useEffect} from 'react';\r\nimport {useHistory, useParams} from 'react-router';\r\nimport marked from 'marked';\r\n\r\nimport api from '../../services/api';\r\nimport fullCourse from '../../utils/fullCourse';\r\n\r\nimport './styles.css';\r\n\r\nimport ArrowLeft from \"../../assets/icons/arrow-left.svg\";\r\n\r\nfunction SpecificTopic() {\r\n    const [topic, setTopic] = useState({\r\n        id: 0,\r\n        title: \"\",\r\n        subject: \"\",\r\n        course: null,\r\n        author: \"\",\r\n        content: \"\"\r\n    });\r\n    const [courseName, setCourseName] = useState([]);\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        async function getTopic() {\r\n            await api.get(`/specific/${id}`).then(res => {\r\n                setTopic(res.data);\r\n            });\r\n        }\r\n        getTopic();\r\n        setCourseName(fullCourse(topic.course));\r\n    }, [topic]);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"lg-header\">\r\n                <button onClick={() => history.goBack()} className=\"topic-return\">\r\n                    <img src={ArrowLeft} alt=\"Voltar\"/>\r\n                    <span>Voltar</span>\r\n                </button>\r\n                <div className=\"topic-title\">\r\n                    <p>\r\n                        {topic.title}\r\n                    </p>\r\n                    <span>\r\n                        {courseName}\r\n                    </span>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"topic-content\" dangerouslySetInnerHTML={{ __html: marked(topic.content, {breaks: true})}}> \r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SpecificTopic;","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\Courses\\index.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\NavBar\\index.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\CourseDiv\\index.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\services\\api.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\TopicDiv\\index.jsx",["63","64"],"import {useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nimport flagPinkIcon from '../../assets/icons/flag-pink.svg';\r\n\r\nfunction TopicDiv({id, title, subject, author, children}){\r\n    return (\r\n        <>\r\n            <div className=\"topic-div\">\r\n                <p>{title} - {subject}</p>\r\n                <span>Feito por {author}</span>\r\n                <div className=\"btns\">\r\n                    {children}\r\n                    <Link className=\"specific\" to={`/specific-topic/${id}`}>Visualizar</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TopicDiv;","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\utils\\fullCourse.js",["65"],"function fullCourse(course){\r\n    let courseName = \"\";\r\n    if(course === null) return courseName;\r\n\r\n    switch(course.substr(1)){\r\n        case 'EDF':\r\n            courseName = 'Edificações';\r\n        break;\r\n        case 'ENF':\r\n            courseName = 'Enfermagem';\r\n        break;\r\n        case 'GEO':\r\n            courseName = 'Geodésia';\r\n        break;\r\n        case 'INF':\r\n            courseName = 'Informática';\r\n        break;\r\n        case 'MEC':\r\n            courseName = 'Mecânica';\r\n        break;\r\n        case 'QLD':\r\n            courseName = 'Qualidade';\r\n        break;\r\n        case 'BEQ':\r\n            courseName = 'Biologia e Química';\r\n        break;\r\n        case 'FEM':\r\n            courseName = 'Física e Matemática';\r\n        break;\r\n        case 'HUM':\r\n            courseName = 'Humanas';\r\n        break;\r\n    }\r\n\r\n    return `${courseName} - ${course[0]}º ano`;\r\n}\r\n\r\nexport default fullCourse;","C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\components\\ReportButton\\index.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\portal-monitoria\\web\\src\\pages\\ChatBot\\index.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":57,"column":9,"nodeType":"72","endLine":57,"endColumn":11,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":33,"column":8,"nodeType":"72","endLine":33,"endColumn":15,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":9,"nodeType":"78","messageId":"79","endLine":1,"endColumn":17},{"ruleId":"76","severity":1,"message":"80","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":5,"column":5,"nodeType":"83","messageId":"84","endLine":33,"endColumn":6},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'course'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["88"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'flagPinkIcon' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [course]",{"range":"93","text":"94"},"Update the dependencies array to be: [id, topic]",{"range":"95","text":"96"},[1629,1631],"[course]",[898,905],"[id, topic]"]